一、用例图
   1、构成：
          系统：用例图中，系统用有标题头部的矩形进行表示，在矩形的内部放置系所包含的功能用例。
          参与者：使用人形符号进行表示，是系统的使用对象
          用例：定义了系统的功能模块，使用椭圆进行表示
          关系：用于说明参与者以及用例之间的关系：
               关联；关联参与者于用例
               泛化：类似于继承关系可以进行重载  箭头指向父用例
               包含：将复杂的用力关系进行分解    箭头指向分解出来的功能用例
               扩展：增强原有的用例功能         箭头指向基础用例
          符号：https://s2.ax1x.com/2019/12/10/QBCldO.png
二、类图：
   类图描述了我们软件系统中类与类的关系
   主要的关系：
        泛化（Generalization） 最终代码中，泛化关系表现为继承非抽象类，带空心箭头的实线表示
        实现（Realization）实现关系使用的是一个带空心箭头的虚线表示，箭头指向接口。表示实现元素。
        依赖（Dependence） 依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系。依赖关系是用一套带箭头的虚线表示的
        关联（Association）描述类之间的结构关系、关联对象通常是以成员变量的形式实现的；联关系是用一条直线表示的；
        聚合（Aggregation）聚合关系在UML中使用带空心菱形的实线表示，菱形指向整体。聚合关系中整体与部分之间是弱依赖关系，整体不存在了，部分依然可以独立存在，也就是说部分和整体的生命周期是独立的。
        组合（Composition）组合关系中的整体与部分之间是强依赖关系，整体不存在了，部分也就不存在了。组合关系在UML中使用实心菱形的实线表示，菱形指向整体
三、对象图：
   对象图（object diagram）描述的是参与交互的各个对象在交互过程中某一时刻的状态。它是系统在某一个特定时间点上的静态结构，是类图的实例和快照，即类图中的各个类在某一个时间点上的实例及其关联关系的静态写照
   例子：https://s2.ax1x.com/2019/12/10/QBmC9K.png
四、交互概览图：
   交互概述图是将活动图和顺序图嫁接在一起的图
   交互概述图有两种形式，
      一种是以活动图为主线，并用顺序图表述细节；
      一种是以顺序图为主线，并用活动图来表述细节
